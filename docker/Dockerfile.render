# Use a lighter base image (Python 3.10 slim version)
# Force platform to linux/amd64 for Render.com compatibility
FROM --platform=linux/amd64 python:3.10-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PATH="/root/.local/bin:$PATH"
ENV COQUI_TOS_AGREED=1

# Create a working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    git \
    libsndfile1 \
    libsndfile1-dev \
    portaudio19-dev \
    python3-dev \
    wget \
    curl \
    pulseaudio \
    pulseaudio-utils \
    libpulse-dev \
    libsdl2-dev \
    libavformat-dev \
    libavcodec-dev \
    libavutil-dev \
    libswscale-dev \
    libswresample-dev \
    dbus \
    && rm -rf /var/lib/apt/lists/*

# Install ffmpeg
RUN apt-get update && apt-get install -y ffmpeg && rm -rf /var/lib/apt/lists/*

# Configure dbus
RUN dbus-uuidgen > /etc/machine-id

# Create a simple ALSA configuration - redirect to null device
RUN mkdir -p /etc/alsa && \
    echo "pcm.!default { type null }" > /etc/asound.conf && \
    echo "ctl.!default { type null }" >> /etc/asound.conf

# Set environment variables to reduce audio errors
ENV ALSA_CARD=none
ENV AUDIODEV=null
ENV SDL_AUDIODRIVER=dummy
# Disable JACK to prevent those errors
ENV JACK_NO_START_SERVER=1
ENV JACK_NO_AUDIO_RESERVATION=1

# Copy only necessary files (EXCLUDING large checkpoint and XTTS-v2)
COPY docker/requirements_render.txt /app/requirements.txt
COPY app /app/app
COPY characters /app/characters
COPY outputs /app/outputs
COPY cli.py /app/cli.py
COPY elevenlabs_voices.json.example /app/elevenlabs_voices.json.example
COPY .env.sample /app/.env.sample
COPY README.md /app/README.md
COPY LICENSE /app/LICENSE
COPY docs /app/docs

# Install Python dependencies (without cache to reduce image size)
RUN pip install --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r /app/requirements.txt || \
    (echo "Retrying pip install..." && pip install --no-cache-dir -r /app/requirements.txt) && \
    python -m spacy download en_core_web_sm || true

# Expose the port that the app runs on
EXPOSE 8000

# Create startup script that properly handles audio warnings
RUN echo '#!/bin/bash' > /app/start.sh && \
    echo 'set -e' >> /app/start.sh && \
    echo '' >> /app/start.sh && \
    echo '# Suppress audio warnings' >> /app/start.sh && \
    echo 'export ALSA_CARD=none' >> /app/start.sh && \
    echo 'export AUDIODEV=null' >> /app/start.sh && \
    echo 'export SDL_AUDIODRIVER=dummy' >> /app/start.sh && \
    echo 'export JACK_NO_START_SERVER=1' >> /app/start.sh && \
    echo '' >> /app/start.sh && \
    echo '# Start the application' >> /app/start.sh && \
    echo 'exec uvicorn app.main:app --host 0.0.0.0 --port 8000 2>&1 | grep -v "ALSA\|snd_\|JACK\|jack\|JackShmReadWritePtr"' >> /app/start.sh && \
    chmod +x /app/start.sh

# Command to run the application
CMD ["/bin/bash", "/app/start.sh"]